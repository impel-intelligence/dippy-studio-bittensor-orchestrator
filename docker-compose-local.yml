
services:
  orchestrator-dev:
    build:
      context: .
      dockerfile: orchestrator/orchestrator.dev.Dockerfile
    command: python orchestrator/server.py --live-reload --port 42169
    ports:
      - "42169:42169"
    volumes:
      - .:/app
      - ${HOME}/.bittensor:/home/appuser/.bittensor:ro
      - ./gcs_service_account.json:/app/gcs_service_account.json:ro
    environment:
      - EPISTULA_HOTKEY_PATH=/home/appuser/.bittensor/wallets/coldkey/hotkeys/hotkey
      - CALLBACK_GCS_BUCKET=${CALLBACK_GCS_BUCKET}
      - CALLBACK_GCS_PREFIX=${CALLBACK_GCS_PREFIX:-callbacks}
      - CALLBACK_GCS_CREDENTIALS=${CALLBACK_GCS_CREDENTIALS:-/app/gcs_service_account.json}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-/app/gcs_service_account.json}
      - JOBRELAY_BASE_URL=${JOBRELAY_BASE_URL:-http://jobrelay:8181}
      - JOBRELAY_TIMEOUT_SECONDS=${JOBRELAY_TIMEOUT_SECONDS:-5}
      - DATABASE_URL=postgresql://orchestrator:orchestrator@postgres:5432/orchestrator
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
      jobrelay:
        condition: service_started

  jobrelay:
    build:
      context: .
      dockerfile: jobrelay/Dockerfile
    ports:
      - "8181:8181"
    volumes:
      - jobrelay_data:/var/lib/jobrelay
      - ./gcs_service_account.json:/app/gcs_service_account.json:ro
    environment:
      - JOBRELAY_AUTH_TOKEN=${JOBRELAY_AUTH_TOKEN:-my-secret-key-here}
      - JOBRELAY_GCS_BUCKET=${JOBRELAY_GCS_BUCKET:-subnet11_internal}
      - JOBRELAY_GCP_CREDENTIALS_PATH=${JOBRELAY_GCP_CREDENTIALS_PATH:-/app/gcs_service_account.json}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-/app/gcs_service_account.json}
    env_file:
      - .env

  postgres:
    image: postgres:18
    ports:
      - "10069:5432"
    environment:
      POSTGRES_DB: orchestrator
      POSTGRES_USER: orchestrator
      POSTGRES_PASSWORD: orchestrator
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql
    restart: unless-stopped

volumes:
  jobrelay_data:
  postgres_data:
