services:
  orchestrator:
    container_name: orchestrator-prod
    build:
      context: .
      dockerfile: orchestrator/orchestrator.Dockerfile
    image: just-orchestrator:prod-local
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://orchestrator:orchestrator@postgres:5432/orchestrator}
      JOBRELAY_BASE_URL: ${JOBRELAY_BASE_URL:-http://jobrelay:8181}
      JOBRELAY_TIMEOUT_SECONDS: ${JOBRELAY_TIMEOUT_SECONDS:-5}
      CALLBACK_GCS_CREDENTIALS: ${CALLBACK_GCS_CREDENTIALS:-/secrets/gcs_service_account.json}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS:-/secrets/gcs_service_account.json}
      EPISTULA_HOTKEY_PATH: ${EPISTULA_HOTKEY_PATH:-/home/appuser/.bittensor/wallets/coldkey/hotkeys/hotkey}
    ports:
      - "42169:42169"
    depends_on:
      postgres:
        condition: service_healthy
      jobrelay:
        condition: service_started
    restart: unless-stopped
    volumes:
      - orchestrator_data:/var/lib/orchestrator
      - type: bind
        source: ${BITTENSOR_WALLET_DIR:?Set BITTENSOR_WALLET_DIR to point at your bittensor wallet directory}
        target: /home/appuser/.bittensor
        read_only: true
      - type: bind
        source: ${GCS_CREDENTIALS_FILE:-./gcs_service_account.json}
        target: /secrets/gcs_service_account.json
        read_only: true

  jobrelay:
    container_name: jobrelay-prod
    build:
      context: .
      dockerfile: jobrelay/Dockerfile
    image: just-jobrelay:prod-local
    env_file:
      - .env
    environment:
      JOBRELAY_AUTH_TOKEN: ${JOBRELAY_AUTH_TOKEN:-my-secret-key-here}
      JOBRELAY_GCS_BUCKET: ${JOBRELAY_GCS_BUCKET:-subnet11_internal}
      JOBRELAY_GCP_CREDENTIALS_PATH: ${JOBRELAY_GCP_CREDENTIALS_PATH:-/secrets/gcs_service_account.json}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS:-/secrets/gcs_service_account.json}
    ports:
      - "8181:8181"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - jobrelay_data:/var/lib/jobrelay
      - type: bind
        source: ${GCS_CREDENTIALS_FILE:-./gcs_service_account.json}
        target: /secrets/gcs_service_account.json
        read_only: true

  postgres:
    image: postgres:18
    container_name: orchestrator-prod-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-orchestrator}
      POSTGRES_USER: ${POSTGRES_USER:-orchestrator}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-orchestrator}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_HOST_PORT:-15432}:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql

volumes:
  orchestrator_data:
  jobrelay_data:
  postgres_data:
