{{- range $name, $job := .Values.cronJobs }}
{{- if $job.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "orchestrator.fullname" $) $name | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "orchestrator.labels" $ | nindent 4 }}
    app.kubernetes.io/component: cron
    app.kubernetes.io/part-of: {{ include "orchestrator.name" $ }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ default "Forbid" $job.concurrencyPolicy }}
  {{- with $job.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with $job.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with $job.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ . }}
  {{- end }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "orchestrator.selectorLabels" $ | nindent 12 }}
            app.kubernetes.io/component: cron
            cronjob.kubernetes.io/name: {{ $name }}
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "orchestrator.serviceAccountName" $ }}
          {{- with $.Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ default "Never" $job.restartPolicy }}
          containers:
            - name: {{ $name }}
              image: "{{ coalesce $job.image.repository $.Values.image.repository }}:{{ coalesce $job.image.tag $.Values.image.tag }}"
              imagePullPolicy: {{ coalesce $job.image.pullPolicy $.Values.image.pullPolicy }}
              {{- with $job.command }}
              command:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with $job.args }}
              args:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- if or $.Values.env $job.env }}
              env:
                {{- range $.Values.env }}
                - name: {{ .name }}
                  value: {{ quote .value }}
                {{- end }}
                {{- range $job.env }}
                - name: {{ .name }}
                  value: {{ quote .value }}
                {{- end }}
              {{- end }}
              {{- if or $.Values.envFromSecrets $.Values.envFromConfigMaps $job.envFromSecrets $job.envFromConfigMaps }}
              envFrom:
                {{- range $.Values.envFromSecrets }}
                - secretRef:
                    name: {{ . }}
                {{- end }}
                {{- range $.Values.envFromConfigMaps }}
                - configMapRef:
                    name: {{ . }}
                {{- end }}
                {{- range $job.envFromSecrets }}
                - secretRef:
                    name: {{ . }}
                {{- end }}
                {{- range $job.envFromConfigMaps }}
                - configMapRef:
                    name: {{ . }}
                {{- end }}
              {{- end }}
              {{- with $.Values.securityContext }}
              securityContext:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with $job.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
              {{- else if $.Values.resources }}
              resources:
                {{- toYaml $.Values.resources | nindent 16 }}
              {{- end }}
          {{- with $job.ttlSecondsAfterFinished }}
          ttlSecondsAfterFinished: {{ . }}
          {{- end }}
          {{- with $.Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
{{- end }}
{{- end }}
